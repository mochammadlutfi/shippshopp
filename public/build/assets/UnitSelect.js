import{_ as d,j as o,k as s,l as u,s as m,u as p,F as h}from"./id.js";import{a as f,E as g}from"./index26.js";import"./index21.js";import"./typescript.js";import"./event.js";import"./index30.js";import"./isEqual.js";import"./_Uint8Array.js";import"./scroll.js";import"./debounce.js";import"./index31.js";const _={name:"UnitSelect",data(){return{dataList:[],value:this.modelValue,isLoading:!1}},watch:{modelValue(e){this.value=e}},props:{modelValue:{type:[String,Number]},placeholder:{type:String,default:""}},computed:{},async mounted(){await this.fetchData()},methods:{async fetchData(){try{this.isLoading=!0;const e=await axios.get(this.route("admin.inventory.unit.data"),{params:{base:this.base}});e.status==200&&(this.dataList=[],this.dataList=e.data),this.isLoading=!1}catch(e){console.error(e)}},selectChange(e){this.$emit("update:modelValue",e)}}};function L(e,l,i,v,a,r){const n=g,c=f;return o(),s(c,{modelValue:a.value,"onUpdate:modelValue":l[0]||(l[0]=t=>a.value=t),"value-key":"id",class:"w-100",filterable:"",clearable:"",remote:"",onChange:r.selectChange,autocomplete:"off",loading:a.isLoading,placeholder:i.placeholder},{default:u(()=>[(o(!0),m(h,null,p(a.dataList,t=>(o(),s(n,{key:t.id,label:t.name+" ("+t.code+")",value:t.id},null,8,["label","value"]))),128))]),_:1},8,["modelValue","onChange","loading","placeholder"])}const D=d(_,[["render",L]]);export{D as default};
